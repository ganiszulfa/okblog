services:
  file-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:8080"
    volumes:
      - ./:/app
    environment:
      - S3_BUCKET_NAME=${S3_BUCKET_NAME:-file-bucket}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL:-http://minio:9000}
      - DEBUG=${DEBUG:-False}
      - PORT=8080
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_DEFAULT_REGION=us-east-1
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST:-http://host.docker.internal:9200}
      - SERVICE_NAME=${SERVICE_NAME:-file-service}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      - minio
    entrypoint: >
      /bin/bash -c "
        pip install --no-cache-dir -r requirements.txt

        if [ -f /app/scripts/init-minio.sh ]; then
          echo 'Initializing MinIO...'
          /app/scripts/init-minio.sh
        fi
        /app/scripts/kibana-setup.sh
        exec gunicorn --bind :$$PORT --workers 1 --threads 2 --timeout 0 --worker-class=gthread app:app
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/files"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - "./minio-data:/data"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3