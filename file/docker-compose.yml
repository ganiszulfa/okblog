services:
  file-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:8080"
    volumes:
      - ./:/app
    environment:
      - S3_BUCKET_NAME=${S3_BUCKET_NAME:-file-bucket}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL:-http://host.docker.internal:4566}
      - DEBUG=${DEBUG:-False}
      - PORT=8080
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST:-http://host.docker.internal:9200}
      - SERVICE_NAME=${SERVICE_NAME:-file-service}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      - localstack
    entrypoint: >
      /bin/bash -c "
        pip install --no-cache-dir -r requirements.txt

        if [ -f /app/scripts/init-localstack.sh ]; then
          echo 'Initializing LocalStack...'
          /app/scripts/init-localstack.sh
        fi
        /app/scripts/kibana-setup.sh
        exec gunicorn --bind :$$PORT --workers 1 --threads 2 --timeout 0 --worker-class=gthread app:app
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/files"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  localstack:
    image: localstack/localstack:4.3
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    environment:
      - SERVICES=s3
      - DEBUG=${DEBUG:-False}
      - PERSISTENCE=1
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "./localstack-data:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"